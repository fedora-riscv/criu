From e1bb0fb902c77668bbc41ad7c1fd6a1ea777c8df Mon Sep 17 00:00:00 2001
From: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
Date: Fri, 29 May 2020 12:40:52 +0300
Subject: [PATCH 190/245] mount: skip root yard children from mnt_needs_remap
 check

There is no point of remaping ns root mounts they can't overmount anybody.

This also allows us to switch mnt_needs_remap from ->mountpoint to
->ns_mountpoint for mount comparison in overmount detection.

Cherry-picked from Virtuozzo criu:
https://src.openvz.org/projects/OVZ/repos/criu/commits/9475bf843

Signed-off-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
---
 criu/mount.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/criu/mount.c b/criu/mount.c
index 83baef4f3..fffebe801 100644
--- a/criu/mount.c
+++ b/criu/mount.c
@@ -541,13 +541,13 @@ static bool mnt_needs_remap(struct mount_info *m)
 {
 	struct mount_info *t;
 
-	if (!m->parent)
+	if (!m->parent || m->parent == root_yard_mp)
 		return false;
 
 	list_for_each_entry(t, &m->parent->children, siblings) {
 		if (m == t)
 			continue;
-		if (issubpath(t->mountpoint, m->mountpoint))
+		if (issubpath(t->ns_mountpoint, m->ns_mountpoint))
 			return true;
 	}
 
@@ -556,7 +556,7 @@ static bool mnt_needs_remap(struct mount_info *m)
 	 * remapped too, else fixup_remap_mounts() won't be able to move parent
 	 * to it's real place, it will move child instead.
 	 */
-	if (!strcmp(m->parent->mountpoint, m->mountpoint))
+	if (!strcmp(m->parent->ns_mountpoint, m->ns_mountpoint))
 		return mnt_needs_remap(m->parent);
 
 	return false;
-- 
2.35.1

