From 36f3ab45867338e98e43ea5f1f26764ae3946fc2 Mon Sep 17 00:00:00 2001
From: Andrei Vagin <avagin@virtuozzo.com>
Date: Tue, 17 Oct 2017 22:22:57 +0300
Subject: [PATCH] fedora aarch64

Signed-off-by: Andrei Vagin <avagin@virtuozzo.com>
---
 .travis.yml                                             |  2 ++
 compel/arch/aarch64/src/lib/include/uapi/asm/sigframe.h | 14 +++++++++++++-
 scripts/build/Dockerfile.fedora-rawhide-aarch64.hdr     |  3 +++
 scripts/build/Dockerfile.fedora-rawhide-aarch64.tmpl    |  1 +
 scripts/build/Makefile                                  |  4 +---
 5 files changed, 20 insertions(+), 4 deletions(-)
 create mode 100644 scripts/build/Dockerfile.fedora-rawhide-aarch64.hdr
 create mode 120000 scripts/build/Dockerfile.fedora-rawhide-aarch64.tmpl

diff --git a/compel/arch/aarch64/src/lib/include/uapi/asm/sigframe.h b/compel/arch/aarch64/src/lib/include/uapi/asm/sigframe.h
index 22246b8fa..ad6b218b9 100644
--- a/compel/arch/aarch64/src/lib/include/uapi/asm/sigframe.h
+++ b/compel/arch/aarch64/src/lib/include/uapi/asm/sigframe.h
@@ -41,10 +41,22 @@ struct rt_sigframe {
 			: "r"(new_sp)						\
 			: "sp", "x8", "memory")
 
+struct cr_sigcontext {
+        __u64 fault_address;
+        /* AArch64 registers */
+        __u64 regs[31];
+        __u64 sp;
+        __u64 pc;
+        __u64 pstate;
+        /* 4K reserved for FP/SIMD state and future expansion */
+        __u8 __reserved[4096] __attribute__((__aligned__(16)));
+};
+
 #define RT_SIGFRAME_UC(rt_sigframe)		(&rt_sigframe->uc)
 #define RT_SIGFRAME_REGIP(rt_sigframe)		((long unsigned int)(rt_sigframe)->uc.uc_mcontext.pc)
 #define RT_SIGFRAME_HAS_FPU(rt_sigframe)	(1)
-#define RT_SIGFRAME_AUX_CONTEXT(rt_sigframe)	((struct aux_context*)&(rt_sigframe)->uc.uc_mcontext.__reserved)
+#define RT_SIGFRAME_SIGCONTEXT(rt_sigframe)	((struct cr_sigcontext *)&(rt_sigframe)->uc.uc_mcontext)
+#define RT_SIGFRAME_AUX_CONTEXT(rt_sigframe)	((struct aux_context*)&(RT_SIGFRAME_SIGCONTEXT(rt_sigframe)->__reserved))
 #define RT_SIGFRAME_FPU(rt_sigframe)		(&RT_SIGFRAME_AUX_CONTEXT(rt_sigframe)->fpsimd)
 #define RT_SIGFRAME_OFFSET(rt_sigframe)		0
 
